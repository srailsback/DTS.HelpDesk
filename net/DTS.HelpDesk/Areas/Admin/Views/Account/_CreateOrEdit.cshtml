@model DTS.HelpDesk.Areas.Admin.Models.ProfileViewModel


<div class="panel-body">


    @using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(x => x.Id)
        <fieldset>
            <div class="form-group">
                <label class="control-label col-sm-2">Name</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "First Name" })
                    @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "Last Name" })
                    @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Email</label>
                <div class="col-sm-6">
                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2">Phone</label>
                <div class="col-sm-3">
                    @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", placeholder = "(555) 555-5555" })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (!ViewContext.HttpContext.Request.Url.ToString().ToLower().Contains("manage"))
            {

                <div class="form-group">
                    <label class="control-label col-sm-2">Locked Out</label>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(x => x.IsLockedOut, (IEnumerable<SelectListItem>)ViewBag.YesOrNo, new { @class = "form-control" })
                    </div>
                </div>
            }
            @if (User.IsInRole("admin"))
            {
                <div class="form-group">
                    <label class="control-label col-sm-2">Roles</label>
                    <div class="col-sm-3">
                        @Html.ListBoxFor(model => model.RoleIds, new MultiSelectList(ViewBag.PossibleRoles, "RoleId", "Name"), new { @class = "form-control" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-sm-10 col-sm-offset-2">
                    <h4>Change Password</h4>
                    <span class="small">
                        Enter new password to change, leave blank to keep old password.<br />
                        Must have one number, uppercase letter, and lowercase letter . Minimum of 6 characters long.
                    </span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Password, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-3">
                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-3">
                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-10 col-sm-offset-2">
                    <form method="post" action="@Url.Action("Delete", new { controller = "Account", area = "Admin"})/{{id}}">
                                                
                        <button class="btn btn-success">Save</button>
                        @if (ViewContext.HttpContext.Request.Url.ToString().ToLower().Contains("edit"))
                        {
                            <button type="button" class="btn btn-danger delete-button">Delete</button>
                        }
                        @if (ViewContext.HttpContext.Request.Url.ToString().ToLower().Contains("manage"))
                        {
                            @Html.ActionLink("Profile", "Profile", new { controller = "Account", area = "Admin" }, new { @class = "btn" })
                        }
                    </form>

                </div>
            </div>
        </fieldset>
    }
</div>
